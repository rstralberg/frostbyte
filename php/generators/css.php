<?php
// ========================================================================
// OEBBY
// by Roland StrÃ¥lberg
// All Rights Reserved 
// Contact: rstralberg@pm.me
// ========================================================================
//
// GENERATES A CSS FILE USING A THEME
// - 

function generate_css_part($part, $json)
{
    try {
    $obj = json_decode($json);
    }
    catch( Exception $e) {
        var_dump($e->getMessage() . ' ' . $e->getFile());
    }

    $vars = get_object_vars($obj);
    $css = '.' . $part . '{' . PHP_EOL;
    foreach ($vars as $key => $value) {
        if (!strstr($key, ':')) {
            $css .= '    ' . $key . ':var(--' . $part . '-' . $key . ');' . PHP_EOL;
        }
    }
    $css .=  '}' . PHP_EOL;

    if (strstr($json, 'hover:')) {
        $css .= '.' . $part . ':hover {' . PHP_EOL;
        foreach ($vars as $key => $value) {
            if (strstr($key, ':')) {
                $split = split_in_two($key,':');
                $css .= '    ' . $split['second'] . ':var(--' . $part . '-' . $split['second'] . '-' . $split['first'] . ');' . PHP_EOL;
            }
        }
        $css .=  '}' . PHP_EOL;
    }

    if (strstr($json, '@')) { 
        $css .= '@media (max-width: 600px) {' . PHP_EOL;
        $css .= '    .' . $part . '{' . PHP_EOL;
        foreach ($vars as $key => $value) {
            if (strstr($value, '@')) {
                // $values = split_in_two($value,'@');
                $css .= '        ' . $key . ':var(--' . $part . '-' . $key . '-media);' . PHP_EOL;
            }
        }
        $css .=  '    }' . PHP_EOL;
        $css .=  '}' . PHP_EOL;
    }

    return $css;
}

function generate_css($db, $name)
{
    $theme = read_theme($db, '`name`=' . db::string($name), null, dbmode::single);
    if ($theme == null) {
        throw new Exception('Unable to load theme ' . $name);
    }

    $css = '/* Autogenerated by OEBBY */' . PHP_EOL;
    $css .= generate_css_part('body', $theme->body);
    $css .= generate_css_part('navbar', $theme->navbar);
    $css .= generate_css_part('navlinks', $theme->navlinks);
    $css .= generate_css_part('footer', $theme->footer);
    $css .= generate_css_part('controls', $theme->controls);
    $css .= generate_css_part('inputs', $theme->inputs);
    $css .= generate_css_part('block', $theme->block);
    $css .= generate_css_part('left', $theme->left);
    $css .= generate_css_part('right', $theme->right);
    $css .= generate_css_part('panelarea', $theme->panelarea);
    $css .= generate_css_part('centerpanel', $theme->centerpanel);
    $css .= generate_css_part('sidepanels', $theme->sidepanels);
    $css .= generate_css_part('toolbar', $theme->toolbar);
    $css .= generate_css_part('tools', $theme->tools);

    $cssfile = glob( '../public/css/theme.css');
    $fh = fopen($cssfile[0], 'w');
    fwrite($fh, $css);
    fclose($fh);
}

function scanCss()
{
    $cssfiles = glob('../public/css/*.css');
    $css = '';
    foreach ($cssfiles as $font) {
        $parts = pathinfo($font);
        $css .= '<link rel="stylesheet" type="text/css" href="css/' . $parts['basename'] . '">' . PHP_EOL;
    }

    return $css;
}

?>